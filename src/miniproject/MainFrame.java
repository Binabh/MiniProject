/*
 * This project is created as mini project for GEOM 319
 * Group members:
 * Binabh Devkota
 * Ashim Sharma
 * Dhana Bhatta
 * Sandesh Upadhayaya
 * Narendra Bhatta
 */
package miniproject;

/**
 *
 * @author Binabh
 */
import com.itextpdf.awt.DefaultFontMapper;
import com.itextpdf.text.Document;
import java.awt.geom.Rectangle2D;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.BorderLayout;
import java.awt.Graphics2D;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textTop1 = new javax.swing.JTextField();
        textMiddle1 = new javax.swing.JTextField();
        textBottom1 = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        textTop2 = new javax.swing.JTextField();
        textMiddle2 = new javax.swing.JTextField();
        textBottom2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sumLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListOutput = new javax.swing.JList<>();
        graphPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        knownRL = new javax.swing.JTextField();
        knownRLButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        readcsvButton = new javax.swing.JButton();
        toCSV = new javax.swing.JButton();
        printPDF = new javax.swing.JButton();
        resetAll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Levelling Calculator");
        setLocation(new java.awt.Point(100, 100));
        setResizable(false);

        textTop1.setToolTipText("Top reading");

        textMiddle1.setToolTipText("Middle reading");

        textBottom1.setToolTipText("Bottom reading");

        addButton.setText("Add Data");
        addButton.setEnabled(false);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        textTop2.setToolTipText("Top Reading");

        textMiddle2.setToolTipText("Middle Reading");

        textBottom2.setToolTipText("Bottom Reading");

        jLabel4.setText("For Backsight");

        jLabel5.setText("For Foresight");

        clearButton.setText("Clear Fields");
        clearButton.setEnabled(false);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(textBottom1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textBottom2)
                            .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(textMiddle1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(textMiddle2))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textTop1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(textTop2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(3, 17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTop1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textTop2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textMiddle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textMiddle2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBottom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textBottom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(clearButton))
                .addContainerGap())
        );

        jLabel1.setText("Station       Backsight       Foresight       Distance       Rise/Fall       Reduced Level");

        sumLabel.setText("Total");

        jListOutput.setOpaque(false);
        jScrollPane1.setViewportView(jListOutput);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sumLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(sumLabel))
        );

        graphPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("L-Section Graph");

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphPanelLayout.createSequentialGroup()
                .addGap(376, 376, 376)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphPanelLayout.createSequentialGroup()
                .addGap(0, 197, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel2.setText("Enter Known RL");

        knownRLButton.setText("Enter Value");
        knownRLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knownRLButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("All values are in \n metric system");

        readcsvButton.setText("Enter CSV FIle");
        readcsvButton.setEnabled(false);
        readcsvButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readcsvButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(knownRL, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(knownRLButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(readcsvButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 29, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(knownRL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(knownRLButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(readcsvButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        toCSV.setText("Write Data to CSV");
        toCSV.setEnabled(false);
        toCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toCSVActionPerformed(evt);
            }
        });

        printPDF.setText("Print Graph to PDF");
        printPDF.setEnabled(false);
        printPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printPDFActionPerformed(evt);
            }
        });

        resetAll.setText("Reset All");
        resetAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(toCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(printPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(resetAll, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(graphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toCSV)
                    .addComponent(printPDF)
                    .addComponent(resetAll)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void knownRLButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knownRLButtonActionPerformed
        // TODO add your handling code here:
        //Storing value of known RL
        try {
            knownRLValue = Double.parseDouble(knownRL.getText());
            //Enabling the buttons for data entry and disabling itself once known RL is entered
            knownRLButton.setEnabled(false);
            addButton.setEnabled(true);
            readcsvButton.setEnabled(true);
            clearButton.setEnabled(true);
        } catch (Exception e) {
            java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Please enter valid value for known RL");

        }

        //LevellingData firstData = new LevellingData(0,0,0,0,0,0,knownRLValue);
        //data.add(firstData);
    }//GEN-LAST:event_knownRLButtonActionPerformed

    private void resetAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetAllActionPerformed
        // TODO add your handling code here:
        //Restarting the program
        dispose();
        MainFrame f = new MainFrame();
        f.setVisible(true);
        LevellingData.counter = 0;
        LevellingData.sumDistance = 0;
    }//GEN-LAST:event_resetAllActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        try {
            //Making object of class Levelling Data
            LevellingData tempData = new LevellingData(Double.parseDouble(textTop1.getText()), Double.parseDouble(textMiddle1.getText()), Double.parseDouble(textBottom1.getText()), Double.parseDouble(textTop2.getText()), Double.parseDouble(textMiddle2.getText()), Double.parseDouble(textBottom2.getText()), knownRLValue);
            //Adding object to arraylist
            data.add(tempData);
            //Setting new value for known RL
            knownRLValue = tempData.getRL();
            //Adding data to list model
            listModel.addElement(tempData.forDisplay());
            //Adding model to the list to display it
            jListOutput.setModel(listModel);
            //setting layout for graph panel
            graphPanel.setLayout(new java.awt.BorderLayout());
            //Creation of dataset and store it in dataset
            CategoryDataset dataset = createDataset();
            //making chart using chartfctory
            chart = ChartFactory.createLineChart("L-section graph", "Distance (m)", "Reduced Level (m)", dataset);
            //getting y axis plot from the chart
            CategoryPlot plot = chart.getCategoryPlot();
            //getting maximum and minimum value to be in the y axis of the chart
            double max = getMax();
            double min = getMin();
            //Setting up the range of y axis
            plot.getRangeAxis().setRange(min - (min % 10), max - (max % 10) + 10);
            //Creating a chart panel
            ChartPanel cp = new ChartPanel(chart);
            //Displaying graph in graph panel
            graphPanel.add(cp, BorderLayout.CENTER);
            graphPanel.validate();
            //Enabling the buttons
            printPDF.setEnabled(true);
            toCSV.setEnabled(true);
        } catch (Exception e) {
            java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Please enter valid value for readings");
        }

    }//GEN-LAST:event_addButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        //clearing up fields
        textTop1.setText("");
        textMiddle1.setText("");
        textBottom1.setText("");
        textTop2.setText("");
        textMiddle2.setText("");
        textBottom2.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void toCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toCSVActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                FileWriter fileWrite = new FileWriter(file);
                BufferedWriter bufferedWrite = new BufferedWriter(fileWrite);
                for (LevellingData any : data) {
                    bufferedWrite.write(any.forCSV());
                }
                bufferedWrite.close();
            } catch (Exception e) {
                java.awt.Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Sorry! could not write data to csv");
            }
            // save to file
        }
    }//GEN-LAST:event_toCSVActionPerformed

    private void printPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printPDFActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            writeChartToPDF(chart, 466, 215, file);
        }
    }//GEN-LAST:event_printPDFActionPerformed

    private void readcsvButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readcsvButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                BufferedReader fileReader = new BufferedReader(new FileReader(file));
                String line = "";
                while ((line = fileReader.readLine()) != null) {
                    String[] column = line.split(",");
                    LevellingData tempData = new LevellingData(Double.parseDouble(column[0]), Double.parseDouble(column[1]), Double.parseDouble(column[2]), Double.parseDouble(column[3]), Double.parseDouble(column[4]), Double.parseDouble(column[5]), knownRLValue);
                    //Adding object to arraylist
                    data.add(tempData);
                    knownRLValue = tempData.getRL();
                    //Adding data to list model
                    listModel.addElement(tempData.forDisplay());
                }
                //Adding model to the list to display it
                jListOutput.setModel(listModel);
                //setting layout for graph panel
                graphPanel.setLayout(new java.awt.BorderLayout());
                //Creation of dataset and store it in dataset
                CategoryDataset dataset = createDataset();
                //making chart using chartfctory
                chart = ChartFactory.createLineChart("L-section graph", "Distance (m)", "Reduced Level (m)", dataset);
                //getting y axis plot from the chart
                CategoryPlot plot = chart.getCategoryPlot();
                //getting maximum and minimum value to be in the y axis of the chart
                double max = getMax();
                double min = getMin();
                //Setting up the range of y axis
                plot.getRangeAxis().setRange(min - (min % 10), max - (max % 10) + 10);
                //Creating a chart panel
                ChartPanel cp = new ChartPanel(chart);
                //Displaying graph in graph panel
                graphPanel.add(cp, BorderLayout.CENTER);
                graphPanel.validate();
                //Enabling the buttons
                printPDF.setEnabled(true);
                toCSV.setEnabled(true);
            } catch (Exception e) {
                java.awt.Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Please enter valid value for readings");
            }
        }
    }//GEN-LAST:event_readcsvButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    private CategoryDataset createDataset() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (LevellingData any : data) {
            dataset.addValue((Double) any.getRL(), "Profile Section", any.getDistance());
        }
        return dataset;
    }

    private double getMax() {
        double max = 0;
        for (LevellingData any : data) {
            if (any.getRL() > max) {
                max = any.getRL();
            }
        }
        return max;
    }

    private double getMin() {
        double min = data.get(0).getRL();
        for (LevellingData any : data) {
            if (any.getRL() < min) {
                min = any.getRL();
            }
        }
        return min;
    }

    public static void writeChartToPDF(JFreeChart chart, int width, int height, File fileName) {
        PdfWriter writer = null;

        Document document = new Document();

        try {
            writer = PdfWriter.getInstance(document, new FileOutputStream(fileName));
            document.open();
            PdfContentByte contentByte = writer.getDirectContent();
            PdfTemplate template = contentByte.createTemplate(width, height);
            Graphics2D graphics2d = template.createGraphics(width, height, new DefaultFontMapper());
            Rectangle2D rectangle2d = new Rectangle2D.Double(0, 0, width, height);

            chart.draw(graphics2d, rectangle2d);

            graphics2d.dispose();
            contentByte.addTemplate(template, 0, 0);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Sorry! Could not print graph to pdf");
            e.printStackTrace();
        }
        document.close();
    }

    private double knownRLValue;
    private ArrayList<LevellingData> data = new ArrayList<LevellingData>();
    private javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel<>();
    private JFreeChart chart;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jListOutput;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField knownRL;
    private javax.swing.JButton knownRLButton;
    private javax.swing.JButton printPDF;
    private javax.swing.JButton readcsvButton;
    private javax.swing.JButton resetAll;
    private javax.swing.JLabel sumLabel;
    private javax.swing.JTextField textBottom1;
    private javax.swing.JTextField textBottom2;
    private javax.swing.JTextField textMiddle1;
    private javax.swing.JTextField textMiddle2;
    private javax.swing.JTextField textTop1;
    private javax.swing.JTextField textTop2;
    private javax.swing.JButton toCSV;
    // End of variables declaration//GEN-END:variables
}

class LevellingData {

    private double top1, top2, middle1, middle2, bottom1, bottom2, riseorfall, rl, distance, returningDistance;
    public static int counter;
    public static double sumDistance;
    private int station;

    public LevellingData(double top1, double middle1, double bottom1, double top2, double middle2, double bottom2, double rl) {
        this.top1 = top1;
        this.middle1 = middle1;
        this.bottom1 = bottom1;
        this.top2 = top2;
        this.middle2 = middle2;
        this.bottom2 = bottom2;
        this.rl = rl;
        counter++;
        station = counter;
        distance = ((top1 - bottom1) * 100) + ((top2 - bottom2) * 100);
        riseorfall = middle1 - middle2;
        sumDistance += distance;
        returningDistance = sumDistance;
    }

    public double getRL() {
        return (rl + riseorfall);
    }

    public String getDistance() {
        return String.valueOf(returningDistance);
    }

    public String forDisplay() {
        String row = station + "                 " + middle1 + "                  " + middle2 + "                  " + distance + "                  " + riseorfall + "                  " + (rl + riseorfall);
        return row;
    }

    public String forCSV() {
        String row = station + "," + middle1 + "," + middle2 + "," + distance + "," + riseorfall + "," + (rl + riseorfall) + "\n";
        return row;
    }

}
